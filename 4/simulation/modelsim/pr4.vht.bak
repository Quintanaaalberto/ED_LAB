-- Copyright (C) 1991-2013 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.

-- ***************************************************************************
-- This file contains a Vhdl test bench template that is freely editable to   
-- suit user's needs .Comments are provided in each section to help the user  
-- fill out necessary details.                                                
-- ***************************************************************************
-- Generated on "02/16/2021 19:42:59"
                                                            
-- Vhdl Test Bench template for design  :  pr4
-- 
-- Simulation tool : ModelSim-Altera (VHDL)
-- 

LIBRARY ieee;                                               
USE ieee.std_logic_1164.all;                                

ENTITY pr4_vhd_tst IS
END pr4_vhd_tst;
ARCHITECTURE pr4_arch OF pr4_vhd_tst IS
-- constants                                                 
-- signals                                                   
SIGNAL A0 : STD_LOGIC;
SIGNAL A1 : STD_LOGIC;
SIGNAL A2 : STD_LOGIC;
SIGNAL A3 : STD_LOGIC;
SIGNAL aa : STD_LOGIC;
SIGNAL ab : STD_LOGIC;
SIGNAL Abigger : STD_LOGIC;
SIGNAL ac : STD_LOGIC;
SIGNAL ad : STD_LOGIC;
SIGNAL ae : STD_LOGIC;
SIGNAL Aequal : STD_LOGIC;
SIGNAL af : STD_LOGIC;
SIGNAL ag : STD_LOGIC;
SIGNAL Asmaller : STD_LOGIC;
SIGNAL B0 : STD_LOGIC;
SIGNAL B1 : STD_LOGIC;
SIGNAL B2 : STD_LOGIC;
SIGNAL B3 : STD_LOGIC;
SIGNAL ba : STD_LOGIC;
SIGNAL bb : STD_LOGIC;
SIGNAL bc : STD_LOGIC;
SIGNAL bd : STD_LOGIC;
SIGNAL be : STD_LOGIC;
SIGNAL bf : STD_LOGIC;
SIGNAL bg : STD_LOGIC;
COMPONENT pr4
	PORT (
	A0 : IN STD_LOGIC;
	A1 : IN STD_LOGIC;
	A2 : IN STD_LOGIC;
	A3 : IN STD_LOGIC;
	aa : OUT STD_LOGIC;
	ab : OUT STD_LOGIC;
	Abigger : OUT STD_LOGIC;
	ac : OUT STD_LOGIC;
	ad : OUT STD_LOGIC;
	ae : OUT STD_LOGIC;
	Aequal : OUT STD_LOGIC;
	af : OUT STD_LOGIC;
	ag : OUT STD_LOGIC;
	Asmaller : OUT STD_LOGIC;
	B0 : IN STD_LOGIC;
	B1 : IN STD_LOGIC;
	B2 : IN STD_LOGIC;
	B3 : IN STD_LOGIC;
	ba : OUT STD_LOGIC;
	bb : OUT STD_LOGIC;
	bc : OUT STD_LOGIC;
	bd : OUT STD_LOGIC;
	be : OUT STD_LOGIC;
	bf : OUT STD_LOGIC;
	bg : OUT STD_LOGIC
	);
END COMPONENT;
BEGIN
	i1 : pr4
	PORT MAP (
-- list connections between master ports and signals
	A0 => A0,
	A1 => A1,
	A2 => A2,
	A3 => A3,
	aa => aa,
	ab => ab,
	Abigger => Abigger,
	ac => ac,
	ad => ad,
	ae => ae,
	Aequal => Aequal,
	af => af,
	ag => ag,
	Asmaller => Asmaller,
	B0 => B0,
	B1 => B1,
	B2 => B2,
	B3 => B3,
	ba => ba,
	bb => bb,
	bc => bc,
	bd => bd,
	be => be,
	bf => bf,
	bg => bg
	);
init : PROCESS                                               
-- variable declarations                                     
BEGIN                                                        
        -- code that executes only once                      
WAIT;                                                       
END PROCESS init;                                           
always : PROCESS                                              
-- optional sensitivity list                                  
-- (        )                                                 
-- variable declarations                                      
BEGIN                                                         
        -- code executes for every event on sensitivity list  
WAIT;                                                        
END PROCESS always;                                          
END pr4_arch;
